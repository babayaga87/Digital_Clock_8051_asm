A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2025 15:33:29 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\main.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE main.A51 SET(SMALL) DEBUG PRINT(.\Listings\main.lst) OBJECT(.\Objects\m
                      ain.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     
                       2     ; definition
  0080                 3     LCD1602_RS_Pin equ P0.0
  0081                 4     LCD1602_RW_Pin equ P0.1
  0082                 5     LCD1602_EN_Pin equ P0.2
  0090                 6     LCD1602_Data_Port equ P1
  00D0                 7     DS1307_Address equ 0d0h
  00B6                 8     SDA equ P3.6
  00B7                 9     SCL equ P3.7
  0000                10     DS1307_Second_Reg equ 00h
  0001                11     DS1307_Minutes_Reg equ 01h
  0002                12     DS1307_Hours_Reg equ 02h
  0003                13     DS1307_Day_Reg equ 03h
  0004                14     DS1307_Date_Reg equ 04h
  0005                15     DS1307_Month_Reg equ 05h
  0006                16     DS1307_Year_Reg equ 06h
  0007                17     DS1307_Control_Reg equ 07h
  0008                18     DS1307_Ram equ 08h
  0001                19     LCD_Clear_Screen equ 01h
  0002                20     LCD_Reset_Cursor equ 02h
  0004                21     LCD_Input_Set equ 04h
  0008                22     LCD_Display_Switch equ 08h
  0010                23     LCD_Shift equ 10h
  0020                24     LCD_Function_Set equ 20h
  0040                25     LCD_Set_CGRAM_Addr equ 40h
  0080                26     LCD_Set_DDRAM_Addr equ 80h
                      27     
                      28     
                      29     
0000                  30     org 0000h
0000 2100             31             jmp Start
                      32     
0003                  33     org 0003h
0003 7156             34             acall DISPLAY_TIME_TO_LCD
0005 32               35             reti
                      36     
0030                  37     org 0030h
0030 4D4F4E00         38         monday: db "MON", 0 
0034 54554500         39         tuesday: db "TUE", 0
0038 57454400         40         wednesday: db "WED", 0
003C 54485500         41         thursday: db "THU", 0
0040 46524900         42         friday: db "FRI", 0
0044 53415400         43         saturday: db "SAT", 0 
0048 53554E00         44         sunday: db "SUN", 0
                      45     
0100                  46     org 0100h
0100                  47     Start:
0100 7400             48             mov A, #0
0102 513E             49             acall DS1307_SET_SQW_FREQ
0104 31AC             50             acall LCD_INIT
0106 7156             51             acall DISPLAY_TIME_TO_LCD
0108 D288             52             SETB IT0    ; INT0 kích cạnh xuống
010A D2A8             53         SETB EX0    ; Cho phép ngắt INT0
010C D2AF             54         SETB EA     ; Cho phép toàn bộ ngắt
                      55     
010E                  56     MainLoop:
010E 80FE             57             jmp MainLoop
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2025 15:33:29 PAGE     2

                      58     
                      59     ;-----------------------------------------------
                      60     ; I2C Interface
                      61     ;-----------------------------------------------
0110                  62     I2C_Start:
0110 D2B6             63           setb SDA  ; ensure SDA is high
0112 D2B7             64           setb SCL  ; ensure SCL is high
0114 C2B6             65           clr SDA   ; Pull SDA to low
0116 22               66           ret
0117                  67     I2C_Send_Byte:
0117 7F08             68           mov R7, #8;                               (1 cycle)
0119                  69           send_loop:
0119 C2B7             70           clr SCL   ; ready for data transfer       (1 cycle)
011B 33               71           rlc A ;                                   (1 cycle)
011C 92B6             72           mov SDA, C ;                              (2 cycles)
011E 3177             73           acall delay_3us ;                         (6 cycles)
0120 D2B7             74           setb SCL  ;                               (1 cycle)
0122 3177             75           acall delay_3us;                          (6 cycles)
0124 00               76           nop       ;                               (1 cycle)
0125 DFF2             77           DJNZ R7, send_loop ;                      (2 cycles)
0127 C2B7             78           clr SCL   ;                               (1 cycle)
0129 22               79           ret;                                      (2 cycles)
012A                  80     I2C_Read_ACK:
012A 317A             81           acall delay_2us;                          (4 cycles)
012C D2B6             82           setb SDA  ;                               (1 cycle)
012E D2B7             83           setb SCL ;                                (1 cycles)
0130 A2B6             84           mov C, SDA;                               (1 cycle)
0132 00               85           nop;                                      (1 cycle)
0133 00               86           nop;                                      (1 cycle)
0134 22               87           ret ;                                     (2 cycles)
0135                  88     I2C_Read_Byte:
0135 7F09             89           mov R7, #9; counter                       (1 cycle)
0137 C3               90               clr C
0138 E4               91               clr A
0139                  92           read_loop:
0139 D2B7             93           setb SCL;                                 (1 cycle)
013B A2B6             94           mov C, SDA; read SDA's state              (1 cycle)
013D 33               95           rlc A;    shift read bit to A register    (1 cycle)
013E 3177             96           acall delay_3us;                          (6 cycles)
0140 00               97           nop;                                      (1 cycle)
0141 C2B7             98           clr SCL;                                  (1 cycle)
0143 3177             99           acall delay_3us;                          (6 cycles)
0145 00              100           nop;                                      (1 cycle)
0146 DFF1            101           DJNZ R7, read_loop;                       (2 cycles)
0148 D2B7            102           setb SCL;                                 (1 cycle) 
                     103               ;rlc A
014A 22              104           ret;                                      (2 cycles)
014B                 105     I2C_Send_Ack:
014B C2B6            106           clr SDA;                                  (1 cycle)
014D 317A            107           acall delay_2us;                          (4 cycles)
014F D2B7            108           setb SCL;                                 (1 cycle)
0151 22              109           ret;                                      (2 cycles)
0152                 110     I2C_Send_NoAck:
0152 00              111           nop;                                      (1 cycle)
0153 317A            112           acall delay_2us;                          (4 cycles)
0155 C2B7            113           clr SCL;                                  (1 cycle)
0157 3172            114           acall delay_4us;                          (8 cycles)
0159 D2B6            115           setb SDA;                                 (1 cycle)
015B D2B7            116           setb SCL;                                 (1 cycle)
015D 22              117           ret;                                      (2 cycles)
015E                 118     I2C_Stop:
015E 00              119           nop ;                                     (1 cycle)
015F 00              120           nop ;                                     (1 cycle)
0160 C2B7            121           clr SCL   ; Push SCL to high              (1 cycle)
0162 C2B6            122           clr SDA;                                  (1 cycle)
0164 3172            123           acall delay_4us;                          (8 cycles)
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2025 15:33:29 PAGE     3

0166 D2B7            124           setb SCL;                                 (1 cycle)
0168 D2B6            125           setb SDA  ;stop condition                 (1 cycle)
016A 22              126           ret;                                      (2 cycle)
                     127     ;-----------------------------------------------;
                     128     ;delay functions
                     129     ;-----------------------------------------------;
016B                 130     delay_5us:
016B 00              131           nop ;                                     (1 cycle)
016C 00              132           nop ;                                     (1 cycle)
016D 00              133           nop ;                                     (1 cycle)
016E 00              134           nop ;                                     (1 cycle)
016F 00              135           nop ;                                     (1 cycle)
0170 00              136           nop ;                                     (1 cycle)
0171 22              137           ret       ;                               (2 cycles)
0172                 138     delay_4us:
0172 00              139           nop ;                                     (1 cycle)
0173 00              140           nop ;                                     (1 cycle)
0174 00              141           nop ;                                     (1 cycle)
0175 00              142           nop ;                                     (1 cycle)
0176 22              143           ret       ;                               (2 cycles)
0177                 144     delay_3us:
0177 00              145           nop ;                                     (1 cycle)
0178 00              146           nop ;                                     (1 cycle)
0179 22              147           ret       ;                               (2 cycles)
017A                 148     delay_2us:
017A 22              149           ret       ;                               (2 cycles)
017B                 150     delay_1ms:
017B 79A6            151           mov R1, #166;                             (1 cycle)
017D                 152           delay_loop:
017D 316B            153           acall delay_5us;                          (10 cycles)
017F D9FC            154           djnz R1, delay_loop;                      (2 cycles)
0181 00              155           nop
0182 00              156           nop
0183 00              157           nop
0184 22              158           ret;                                      (2 cycles)
                     159     ; su dung thanh ghi R2 lam tham so (ms > 1)
                     160     ; todo: chua chinh xac
0185                 161     delay_ms:
                     162           ;dec R2;                                  (1 cycle)
0185                 163           delay_ms_loop:
0185 317B            164           acall delay_1ms;                          (2000 cycles)
0187 DAFC            165           djnz R2, delay_ms_loop;                   (2 cycle)
0189 22              166           ret;                                      (2 cycle)
                     167          
                     168     ;-----------------------------------------------;
                     169     ;lcd 8-bit parallel 
                     170     ;-----------------------------------------------;
                     171     ; brief: send instuction code to lcd 1602
                     172     ; use register A as instruction code byte to be sent
018A                 173     LCD1602_Send_Ins:
018A D282            174             setb LCD1602_EN_Pin
018C C281            175             clr LCD1602_RW_Pin
018E C280            176             clr LCD1602_RS_Pin
0190 F590            177             mov LCD1602_Data_Port, A
0192 3177            178             acall delay_3us
0194 C282            179             clr LCD1602_EN_Pin
0196 7A02            180             mov R2, #2d
0198 3185            181             acall delay_ms
019A 22              182             ret
                     183             
                     184     ; brief: send data to lcd 1602's RAM (DDRAM, CGRAM)
                     185     ; use register A as data byte to be sent
019B                 186     LCD1602_Send_Data:
019B D282            187             setb LCD1602_EN_Pin
019D C281            188             clr LCD1602_RW_Pin
019F D280            189             setb LCD1602_RS_Pin
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2025 15:33:29 PAGE     4

01A1 F590            190             mov LCD1602_Data_Port, A
01A3 3177            191             acall delay_3us
01A5 C282            192             clr LCD1602_EN_Pin
01A7 7A02            193             mov R2, #2d
01A9 3185            194             acall delay_ms
01AB 22              195             ret
                     196     
                     197     ;-----------------------------------------------
                     198     ; LCD_INIT
                     199     ; Khởi tạo LCD1602 chế độ 8-bit
                     200     ;-----------------------------------------------
01AC                 201     LCD_INIT:
                     202             ; initialize lcd 1602
01AC 7A0F            203             mov R2, #15d
01AE 3185            204             acall delay_ms
01B0 7430            205             mov A, #30h
01B2 318A            206             acall LCD1602_Send_Ins
01B4 7A05            207             mov R2, #5d
01B6 3185            208             acall delay_ms
01B8 7430            209             mov A, #30h
01BA 318A            210             acall LCD1602_Send_Ins
01BC 317A            211             acall delay_2us
01BE 7430            212             mov A, #30h
01C0 318A            213             acall LCD1602_Send_Ins
01C2 7A0A            214             mov R2, #10d
01C4 3185            215             acall delay_ms
                     216             
                     217             ;setup lcd 1602
01C6 7438            218             mov A, #38h ; function set -> DL = 1 (8 bit mode), N = 1 (2 line), F = 0 (5 x 8 cha
                             racters)
01C8 318A            219             acall LCD1602_Send_Ins
01CA 7408            220             mov A, #08h ; turn the display, cursor, blinking off (D = 0, C = 0, B = 0)
01CC 318A            221             acall LCD1602_Send_Ins
01CE 7401            222             mov A, #01h ; screen clear instruction code
01D0 318A            223             acall LCD1602_Send_Ins
01D2 7406            224             mov A, #06h ; input set -> I/D = 1 (Increment mode), S = 0 (no shift)
01D4 318A            225             acall LCD1602_Send_Ins
01D6 740C            226             mov A, #0Ch ; turn the dislay on, D = 1
01D8 318A            227             acall LCD1602_Send_Ins    
01DA 22              228         ret 
                     229     
                     230     ;-----------------------------------------------
                     231     ; LCD_CLEAR
                     232     ; Gửi lệnh 0x01 để xóa toàn bộ nội dung LCD
                     233     ; Gọi LCD1602_Send_Ins, không cần thay đổi gì thêm
                     234     ;-----------------------------------------------
01DB                 235     LCD_Clear:
01DB 7401            236         mov A, #01h            ; Lệnh 0x01 clear
01DD 318A            237         acall LCD1602_Send_Ins ; 
01DF 22              238         ret
                     239     
                     240     
                     241     ;-----------------------------------------------
                     242     ; LCD_SETCURSOR
                     243     ; Đặt vị trí con trỏ tại (row, col)
                     244     ; - Input: R0 = row (0 hoặc 1), R1 = col (0..15)
                     245     ; - Tính địa chỉ DDRAM:
                     246     ;     row = 0 → addr = 0x80 + col
                     247     ;     row = 1 → addr = 0xC0 + col
                     248     ; - Gán addr vào A, rồi gọi LCD1602_Send_Ins
                     249     ;-----------------------------------------------
                     250     ;Đặt vị trí con trỏ tại (row, col)
01E0                 251     LCD_SETCURSOR:
01E0 E8              252         mov A, R0           ; Kiểm tra hàng (row)
01E1 B40005          253         cjne A, #0, Row1    ; Nếu R0 ≠ 0 → row 1
                     254     ; Row = 0
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2025 15:33:29 PAGE     5

01E4 7480            255         mov A, #80h         ; 
01E6 29              256         add A, R1           ; A = 0x80 + col
01E7 8003            257         sjmp SetCursor
                     258     
01E9                 259     Row1:
01E9 74C0            260         mov A, #0C0h        ; Base address for row 1
01EB 29              261         add A, R1           ; A = 0xC0 + col
                     262     
01EC                 263     SetCursor:
01EC 318A            264         acall LCD1602_Send_Ins
01EE 22              265         ret
                     266     
                     267     ;-----------------------------------------------
                     268     ;LCD_Send_Char
                     269     ;-----------------------------------------------
                     270     ; Gửi một ký tự đến LCD
                     271     ; A = ký tự ASCII cần hiển thị
01EF                 272     LCD_Send_Char:
01EF 319B            273         acall LCD1602_Send_Data
01F1 22              274         ret
                     275     
                     276     
                     277     ;-----------------------------------------------
                     278     ; LCD_SEND_STRING
                     279     ; Gửi chuỗi ký tự đến LCD
                     280     ; - DPTR trỏ đến chuỗi kết thúc bằng 0 (null-terminated)
                     281     ;-----------------------------------------------
01F2                 282     LCD_SEND_STRING:
01F2 E4              283         clr A                    ; Đặt offset ban đầu = 0
01F3                 284     Next_Char:
01F3 C0E0            285         push ACC
01F5 93              286         movc A, @A+DPTR          ; Đọc ký tự từ ROM (DPTR + offset A)
01F6 6007            287         jz Done                  ; Nếu A == 0 (kết thúc chuỗi), thoát
01F8 319B            288         acall LCD1602_Send_Data  ; Gửi ký tự ra LCD
01FA D0E0            289         pop ACC 
01FC 04              290         inc A                    ; Tăng offset
01FD 80F4            291         sjmp Next_Char           ; Lặp lại
01FF                 292     Done:
01FF D0E0            293             pop ACC
0201 22              294         ret
                     295     ;-----------------------------------------------
                     296     ;-----------------------------------------------
                     297     ; DS1307_WRITE_BYTE
                     298     ; Ghi 1 byte dữ liệu vào DS1307 tại địa chỉ reg
                     299     ; Tham số: A chứa địa chỉ thanh ghi (reg)
                     300     ;          B chứa dữ liệu cần ghi (data)                
                     301     ;-----------------------------------------------
0202                 302     DS1307_WRITE_BYTE:
0202 C0E0            303             push ACC
0204 74D0            304             mov A, #DS1307_Address
0206 3110            305             acall I2C_Start
0208 3117            306             acall I2C_Send_Byte
020A 312A            307             acall I2C_Read_ACK
020C D0E0            308         pop ACC
020E 3117            309             acall I2C_Send_Byte
0210 312A            310             acall I2C_Read_ACK
0212 E5F0            311             mov A, B
0214 3117            312             acall I2C_Send_Byte
0216 312A            313             acall I2C_Read_ACK
0218 315E            314             acall I2C_Stop
021A 22              315             ret
                     316     
                     317     ;-----------------------------------------------
                     318     ; DS1307_READ_BYTE
                     319     ; Đọc 1 byte dữ liệu từ DS1307 tại địa chỉ reg
                     320     ; Tham số: R0 chứa địa chỉ thanh ghi (reg)
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2025 15:33:29 PAGE     6

                     321     ; Trả về: A chứa dữ liệu đọc được từ DS1307
                     322     ;huy
                     323     ;-----------------------------------------------
021B                 324     DS1307_READ_BYTE:
021B C0E0            325             PUSH Acc
021D 74D0            326             mov A, #DS1307_Address
021F 3110            327             acall I2C_Start
0221 3117            328             acall I2C_Send_Byte
0223 312A            329             acall I2C_Read_ACK
0225 D0E0            330             pop Acc
0227 3117            331             acall I2C_Send_Byte
0229 312A            332             acall I2C_Read_ACK
022B 315E            333             acall I2C_Stop
022D 74D0            334             mov A, #DS1307_Address
022F 4401            335             orl A, #1
0231 3110            336             acall I2C_Start
0233 3117            337             acall I2C_Send_Byte
0235 312A            338             acall I2C_Read_ACK
0237 3135            339             acall I2C_Read_Byte
0239 3152            340             acall I2C_Send_NoAck
023B 315E            341             acall I2C_Stop
023D 22              342             RET
                     343     
                     344     
                     345     ;-----------------------------------------------
                     346     ; DS1307_SET_SQW_FREQ
                     347     ; Cài đặt tần số xung output của DS1307
                     348     ; Tham số:    A = 0x00 -> 1Hz
                     349     ;               A = 0x01 -> 4kHz
                     350     ;               A = 0x02 -> 8kHz
                     351     ;               A = 0x03 -> 32kHz 
                     352     ;-----------------------------------------------
                     353     ;-----------------------------------------------
                     354     ; DS1307_SET_SQW_FREQ
                     355     ; Cài đặt tần số xung output của DS1307
                     356     ; Tham số:    A = 0x00 -> 1Hz
                     357     ;               A = 0x01 -> 4kHz
                     358     ;               A = 0x02 -> 8kHz
                     359     ;               A = 0x03 -> 32kHz 
                     360     ;-----------------------------------------------
023E                 361     DS1307_SET_SQW_FREQ:
023E                 362             sqw_1hz:
023E B40004          363             cjne A, #00h, sqw_4kHz
0241 7410            364         mov A, #10h
0243 8010            365         sjmp final_set_freq
                     366             
0245                 367             sqw_4kHz:
0245 B40104          368             cjne A, #01h, sqw_8kHz
0248 7411            369         mov A, #11h
024A 8009            370         sjmp final_set_freq
                     371     
024C                 372             sqw_8kHz:
024C B40204          373             cjne A, #02h, sqw_32kHz
024F 7412            374             mov A, #12h
0251 8002            375         sjmp final_set_freq
                     376     
0253                 377             sqw_32kHz:
0253 7413            378         mov A, #13h
                     379             
0255                 380         final_set_freq:
0255 F5F0            381             mov B, A
0257 7407            382             mov A, #DS1307_Control_Reg
0259 5102            383             acall DS1307_WRITE_BYTE
025B 22              384         ret 
                     385     
                     386     
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2025 15:33:29 PAGE     7

                     387     ;-----------------------------------------------
                     388     ; DS1307_SET_SQW
                     389     ; Bật tắt xung output của DS1307
                     390     ; Tham số:    C = 0 -> off
                     391     ;           C = 1 -> on
                     392     ;-----------------------------------------------
025C                 393     DS1307_SET_SQW:
025C 5008            394             jnc off
025E                 395         on:
025E 7407            396             mov A, #DS1307_Control_Reg 
0260 511B            397         acall DS1307_READ_BYTE
0262 4410            398         orl A, #10h
0264 8006            399         sjmp final_set_sqw
0266                 400         off:
0266 7407            401             mov A, #DS1307_Control_Reg 
0268 511B            402         acall DS1307_READ_BYTE
026A 54EF            403         anl A, #0efh
026C                 404         final_set_sqw:
026C F5F0            405         mov B, A 
026E 7407            406         mov A, #DS1307_Control_Reg
0270 5102            407         acall DS1307_WRITE_BYTE
0272 22              408         ret
                     409     
                     410     ;-----------------------------------------------
                     411     ; DS1307_GET: Các hàm để lấy thông tin từ DS1307
                     412     ;-----------------------------------------------
                     413     
                     414     ;-----------------------------------------------
0273                 415     DS1307_GET_SECOND:
0273 7400            416             MOV A, #DS1307_Second_Reg
0275 511B            417             ACALL DS1307_READ_BYTE
0277 F530            418             MOV 30H, A
0279 22              419             RET
                     420     ;-----------------------------------------------
027A                 421     DS1307_GET_MINUTES:
027A 7401            422             MOV A, #DS1307_Minutes_Reg
027C 511B            423             ACALL DS1307_READ_BYTE
027E F531            424             MOV 31H, A
0280 22              425             RET
                     426     ;-----------------------------------------------
0281                 427     DS1307_GET_HOURS:       
0281 7402            428             MOV A, #DS1307_Hours_Reg
0283 511B            429             ACALL DS1307_READ_BYTE
0285 F532            430             MOV 32H, A
0287 22              431             RET
                     432     ;-----------------------------------------------
0288                 433     DS1307_GET_DAY: 
0288 7403            434             MOV A, #DS1307_Day_Reg
028A 511B            435             ACALL DS1307_READ_BYTE
028C F533            436             MOV 33H, A
028E 22              437             RET
                     438     ;-----------------------------------------------
028F                 439     DS1307_GET_DATE:        
028F 7404            440             MOV A, #DS1307_Date_Reg
0291 511B            441             ACALL DS1307_READ_BYTE
0293 F534            442             MOV 34h, A
0295 22              443             RET
                     444             
                     445     ;-----------------------------------------------
0296                 446     DS1307_GET_MONTH:       
0296 7405            447             MOV A, #DS1307_Month_Reg
0298 511B            448             ACALL DS1307_READ_BYTE
029A F535            449             MOV 35H, A
029C 22              450             RET
                     451             
                     452     ;-----------------------------------------------
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2025 15:33:29 PAGE     8

029D                 453     DS1307_GET_YEAR:        
029D 7406            454             MOV A, #DS1307_Year_Reg
029F 511B            455             ACALL DS1307_READ_BYTE
02A1 F536            456             MOV 36H, A
02A3 22              457             RET     
                     458     
                     459     ;-----------------------------------------------
                     460     ;HÀM SET_TIME
                     461     ;HI?N TRUY?N GIÁ TR? C? Ð?NH VÔ 
                     462     ;-----------------------------------------------
02A4                 463     DS1307_SET_SECOND:
02A4 F5F0            464             mov B , A
02A6 7400            465             mov A, #DS1307_Second_Reg
02A8 5102            466             acall DS1307_WRITE_BYTE
02AA 22              467             RET
                     468             
                     469     ;;-----------------------------------------------
02AB                 470     DS1307_SET_MINUTES:
02AB F5F0            471             mov B , A
02AD 7401            472             mov A, #DS1307_Minutes_Reg
02AF 5102            473             acall DS1307_WRITE_BYTE
02B1 22              474             RET
                     475             
                     476     ;;-----------------------------------------------
02B2                 477     DS1307_SET_HOURS:
02B2 F5F0            478             mov B , A
02B4 7402            479             mov A, #DS1307_Hours_Reg
02B6 5102            480             acall DS1307_WRITE_BYTE
02B8 22              481             RET
                     482     
                     483     ;;-----------------------------------------------
02B9                 484     DS1307_SET_DAY:
02B9 F5F0            485             mov B , A
02BB 7403            486             mov A, #DS1307_Day_Reg
02BD 5102            487             acall DS1307_WRITE_BYTE
02BF 22              488             RET
                     489     
                     490     ;;-----------------------------------------------
02C0                 491     DS1307_SET_DATE:
02C0 F5F0            492             mov B , A
02C2 7404            493             mov A, #DS1307_Date_Reg
02C4 5102            494             acall DS1307_WRITE_BYTE
02C6 22              495             RET
                     496             
                     497     ;;-----------------------------------------------
02C7                 498     DS1307_SET_MONTH:
02C7 F5F0            499             mov B , A
02C9 7405            500             mov A, #DS1307_Month_Reg
02CB 5102            501             acall DS1307_WRITE_BYTE
02CD 22              502             RET     
                     503             
                     504     ;;-----------------------------------------------
02CE                 505     DS1307_SET_YEAR:
02CE F5F0            506             mov B , A
02D0 7406            507             mov A, #DS1307_Year_Reg
02D2 5102            508             acall DS1307_WRITE_BYTE
02D4 22              509             RET
                     510             
                     511     ;-----------------------------------------------
                     512     ; CONVERT_BCD_TO_ASCII
                     513     ; Chuyển 1 byte BCD sang 2 ký tự ASCII (ví dụ: 0x45 -> '4', '5')
                     514     ; Đầu vào: A chứa giá trị BCD
                     515     ; Đầu ra: R5 = ASCII hàng chục, R6 = ASCII hàng đơn vị
                     516     ;-----------------------------------------------
02D5                 517     CONVERT_BCD_TO_ASCII:
02D5 7B30            518             mov R3, #30h
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2025 15:33:29 PAGE     9

02D7 7C30            519             mov R4, #30h
02D9 C0E0            520             push ACC 
02DB 540F            521             anl A, #0fh
02DD 4C              522             orl A, R4
02DE FC              523             mov R4, A
02DF D0E0            524             pop ACC
02E1 C4              525             swap A
02E2 540F            526             anl A, #0fh
02E4 4B              527             orl A, R3
02E5 FB              528             mov R3, A
02E6 22              529             ret
                     530     
                     531     
                     532     ;-----------------------------------------------
                     533     ; DISPLAY_TIME_TO_LCD
                     534     ; Hiển thị thời gian hiện tại lên LCD1602 ở hàng 1, cột 0
                     535     ; Định dạng: HH:MM:SS
                     536     ; mục đích của hàm này là sao? là dùng để gọi các hàm đã viết phía t
                             rên để trong hàm main chỉ cần gọi hàm DISPLAY_TIME_TO_LCD
                     537     ; và thêm một số cái delay thì sẽ hiện giờ 
                     538     ;-----------------------------------------------
02E7                 539     DISPLAY_HOURS_TO_LCD:
02E7 5181            540             ACALL DS1307_GET_HOURS   
02E9 E532            541             MOV A, 32H  ; hours
02EB 51D5            542             ACALL CONVERT_BCD_TO_ASCII 
02ED EB              543             MOV A, R3
02EE 319B            544             ACALL LCD1602_Send_Data 
02F0 EC              545             MOV A, R4
02F1 319B            546             ACALL LCD1602_Send_Data
02F3 743A            547             MOV A, #03Ah ; hienthi dau :
02F5 319B            548             ACALL LCD1602_Send_Data
02F7 22              549             RET
                     550     
02F8                 551     DISPLAY_MINUTES_TO_LCD:
02F8 517A            552             ACALL DS1307_GET_MINUTES
02FA E531            553             MOV A, 31H  ; minutes
02FC 51D5            554             ACALL CONVERT_BCD_TO_ASCII 
02FE EB              555             MOV A, R3
02FF 319B            556             ACALL LCD1602_Send_Data
0301 EC              557             MOV A, R4
0302 319B            558             ACALL LCD1602_Send_Data
0304 743A            559             MOV A, #03Ah
0306 319B            560             ACALL LCD1602_Send_Data
0308 22              561             RET
                     562     
0309                 563     DISPLAY_SECONDS_TO_LCD:
0309 5173            564             ACALL DS1307_GET_SECOND
030B E530            565             MOV A, 30H ; seconds
030D 51D5            566             ACALL CONVERT_BCD_TO_ASCII 
030F EB              567             MOV A, R3
0310 319B            568             ACALL LCD1602_Send_Data
0312 EC              569             MOV A, R4
0313 319B            570             ACALL LCD1602_Send_Data
0315 22              571             RET
                     572     
0316                 573     DISPLAY_DAY_TO_LCD:
0316 5188            574             ACALL DS1307_GET_DAY     ; -> 33H
0318 E533            575         MOV A, 33H       ; A = thứ (1..7)
031A 14              576         DEC A            ; Đổi về 0..6
031B 75F004          577             mov B, #4
031E A4              578             mul AB
031F 2430            579             add A, #30h
0321 F582            580             mov DPL, A
0323 758300          581             mov DPH, #0
0326 31F2            582             acall LCD_SEND_STRING
0328 22              583             ret
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2025 15:33:29 PAGE    10

                     584     
0329                 585     DISPLAY_DATE_TO_LCD:
0329 518F            586             ACALL DS1307_GET_DATE    ; -> 34H
032B 5196            587         ACALL DS1307_GET_MONTH   ; -> 35H
032D 519D            588         ACALL DS1307_GET_YEAR    ; -> 36H
                     589             
032F E534            590             MOV A, 34H ; date
0331 51D5            591             ACALL CONVERT_BCD_TO_ASCII 
0333 EB              592             MOV A, R3
0334 319B            593             ACALL LCD1602_Send_Data
0336 EC              594             MOV A, R4
0337 319B            595             ACALL LCD1602_Send_Data
0339 742F            596             MOV A, #02Fh
033B 319B            597             ACALL LCD1602_Send_Data
                     598             
                     599             
033D E535            600             MOV A, 35H ; month
033F 51D5            601             ACALL CONVERT_BCD_TO_ASCII 
0341 EB              602             MOV A, R3
0342 319B            603             ACALL LCD1602_Send_Data
0344 EC              604             MOV A, R4
0345 319B            605             ACALL LCD1602_Send_Data
0347 742F            606             MOV A, #02Fh
0349 319B            607             ACALL LCD1602_Send_Data
                     608             
                     609             
034B E536            610             MOV A, 36H ; year
034D 51D5            611             ACALL CONVERT_BCD_TO_ASCII 
034F EB              612             MOV A, R3
0350 319B            613             ACALL LCD1602_Send_Data
0352 EC              614             MOV A, R4
0353 319B            615             ACALL LCD1602_Send_Data
                     616             
0355 22              617             RET
                     618     
0356                 619     DISPLAY_TIME_TO_LCD:
0356 7800            620             MOV R0, #0
0358 7900            621             MOV R1, #0
035A 31E0            622             ACALL LCD_SETCURSOR
035C 7129            623             ACALL DISPLAY_DATE_TO_LCD
035E 7800            624             MOV R0, #0
0360 790D            625             MOV R1, #13
0362 31E0            626             ACALL LCD_SETCURSOR
0364 7116            627             ACALL DISPLAY_DAY_TO_LCD
                     628     
0366 7801            629             MOV R0, #1
0368 7900            630             MOV R1, #0
036A 31E0            631             ACALL LCD_SETCURSOR
036C 51E7            632             ACALL DISPLAY_HOURS_TO_LCD
036E 51F8            633             ACALL DISPLAY_MINUTES_TO_LCD
0370 7109            634             ACALL DISPLAY_SECONDS_TO_LCD
                     635     
0372 22              636             RET
                     637     
                     638     end
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2025 15:33:29 PAGE    11

SYMBOL TABLE LISTING
------ ----- -------


N A M E                 T Y P E  V A L U E   ATTRIBUTES

ACC. . . . . . . . . .  D ADDR   00E0H   A   
B. . . . . . . . . . .  D ADDR   00F0H   A   
CONVERT_BCD_TO_ASCII .  C ADDR   02D5H   A   
DELAY_1MS. . . . . . .  C ADDR   017BH   A   
DELAY_2US. . . . . . .  C ADDR   017AH   A   
DELAY_3US. . . . . . .  C ADDR   0177H   A   
DELAY_4US. . . . . . .  C ADDR   0172H   A   
DELAY_5US. . . . . . .  C ADDR   016BH   A   
DELAY_LOOP . . . . . .  C ADDR   017DH   A   
DELAY_MS . . . . . . .  C ADDR   0185H   A   
DELAY_MS_LOOP. . . . .  C ADDR   0185H   A   
DISPLAY_DATE_TO_LCD. .  C ADDR   0329H   A   
DISPLAY_DAY_TO_LCD . .  C ADDR   0316H   A   
DISPLAY_HOURS_TO_LCD .  C ADDR   02E7H   A   
DISPLAY_MINUTES_TO_LCD  C ADDR   02F8H   A   
DISPLAY_SECONDS_TO_LCD  C ADDR   0309H   A   
DISPLAY_TIME_TO_LCD. .  C ADDR   0356H   A   
DONE . . . . . . . . .  C ADDR   01FFH   A   
DPH. . . . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . . . .  D ADDR   0082H   A   
DS1307_ADDRESS . . . .  N NUMB   00D0H   A   
DS1307_CONTROL_REG . .  N NUMB   0007H   A   
DS1307_DATE_REG. . . .  N NUMB   0004H   A   
DS1307_DAY_REG . . . .  N NUMB   0003H   A   
DS1307_GET_DATE. . . .  C ADDR   028FH   A   
DS1307_GET_DAY . . . .  C ADDR   0288H   A   
DS1307_GET_HOURS . . .  C ADDR   0281H   A   
DS1307_GET_MINUTES . .  C ADDR   027AH   A   
DS1307_GET_MONTH . . .  C ADDR   0296H   A   
DS1307_GET_SECOND. . .  C ADDR   0273H   A   
DS1307_GET_YEAR. . . .  C ADDR   029DH   A   
DS1307_HOURS_REG . . .  N NUMB   0002H   A   
DS1307_MINUTES_REG . .  N NUMB   0001H   A   
DS1307_MONTH_REG . . .  N NUMB   0005H   A   
DS1307_RAM . . . . . .  N NUMB   0008H   A   
DS1307_READ_BYTE . . .  C ADDR   021BH   A   
DS1307_SECOND_REG. . .  N NUMB   0000H   A   
DS1307_SET_DATE. . . .  C ADDR   02C0H   A   
DS1307_SET_DAY . . . .  C ADDR   02B9H   A   
DS1307_SET_HOURS . . .  C ADDR   02B2H   A   
DS1307_SET_MINUTES . .  C ADDR   02ABH   A   
DS1307_SET_MONTH . . .  C ADDR   02C7H   A   
DS1307_SET_SECOND. . .  C ADDR   02A4H   A   
DS1307_SET_SQW . . . .  C ADDR   025CH   A   
DS1307_SET_SQW_FREQ. .  C ADDR   023EH   A   
DS1307_SET_YEAR. . . .  C ADDR   02CEH   A   
DS1307_WRITE_BYTE. . .  C ADDR   0202H   A   
DS1307_YEAR_REG. . . .  N NUMB   0006H   A   
EA . . . . . . . . . .  B ADDR   00A8H.7 A   
EX0. . . . . . . . . .  B ADDR   00A8H.0 A   
FINAL_SET_FREQ . . . .  C ADDR   0255H   A   
FINAL_SET_SQW. . . . .  C ADDR   026CH   A   
FRIDAY . . . . . . . .  C ADDR   0040H   A   
I2C_READ_ACK . . . . .  C ADDR   012AH   A   
I2C_READ_BYTE. . . . .  C ADDR   0135H   A   
I2C_SEND_ACK . . . . .  C ADDR   014BH   A   
I2C_SEND_BYTE. . . . .  C ADDR   0117H   A   
I2C_SEND_NOACK . . . .  C ADDR   0152H   A   
I2C_START. . . . . . .  C ADDR   0110H   A   
I2C_STOP . . . . . . .  C ADDR   015EH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/16/2025 15:33:29 PAGE    12

IT0. . . . . . . . . .  B ADDR   0088H.0 A   
LCD1602_DATA_PORT. . .  D ADDR   0090H   A   
LCD1602_EN_PIN . . . .  B ADDR   0080H.2 A   
LCD1602_RS_PIN . . . .  B ADDR   0080H.0 A   
LCD1602_RW_PIN . . . .  B ADDR   0080H.1 A   
LCD1602_SEND_DATA. . .  C ADDR   019BH   A   
LCD1602_SEND_INS . . .  C ADDR   018AH   A   
LCD_CLEAR. . . . . . .  C ADDR   01DBH   A   
LCD_CLEAR_SCREEN . . .  N NUMB   0001H   A   
LCD_DISPLAY_SWITCH . .  N NUMB   0008H   A   
LCD_FUNCTION_SET . . .  N NUMB   0020H   A   
LCD_INIT . . . . . . .  C ADDR   01ACH   A   
LCD_INPUT_SET. . . . .  N NUMB   0004H   A   
LCD_RESET_CURSOR . . .  N NUMB   0002H   A   
LCD_SEND_CHAR. . . . .  C ADDR   01EFH   A   
LCD_SEND_STRING. . . .  C ADDR   01F2H   A   
LCD_SETCURSOR. . . . .  C ADDR   01E0H   A   
LCD_SET_CGRAM_ADDR . .  N NUMB   0040H   A   
LCD_SET_DDRAM_ADDR . .  N NUMB   0080H   A   
LCD_SHIFT. . . . . . .  N NUMB   0010H   A   
MAINLOOP . . . . . . .  C ADDR   010EH   A   
MONDAY . . . . . . . .  C ADDR   0030H   A   
NEXT_CHAR. . . . . . .  C ADDR   01F3H   A   
OFF. . . . . . . . . .  C ADDR   0266H   A   
ON . . . . . . . . . .  C ADDR   025EH   A   
P0 . . . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . . . .  D ADDR   0090H   A   
P3 . . . . . . . . . .  D ADDR   00B0H   A   
READ_LOOP. . . . . . .  C ADDR   0139H   A   
ROW1 . . . . . . . . .  C ADDR   01E9H   A   
SATURDAY . . . . . . .  C ADDR   0044H   A   
SCL. . . . . . . . . .  B ADDR   00B0H.7 A   
SDA. . . . . . . . . .  B ADDR   00B0H.6 A   
SEND_LOOP. . . . . . .  C ADDR   0119H   A   
SETCURSOR. . . . . . .  C ADDR   01ECH   A   
SQW_1HZ. . . . . . . .  C ADDR   023EH   A   
SQW_32KHZ. . . . . . .  C ADDR   0253H   A   
SQW_4KHZ . . . . . . .  C ADDR   0245H   A   
SQW_8KHZ . . . . . . .  C ADDR   024CH   A   
START. . . . . . . . .  C ADDR   0100H   A   
SUNDAY . . . . . . . .  C ADDR   0048H   A   
THURSDAY . . . . . . .  C ADDR   003CH   A   
TUESDAY. . . . . . . .  C ADDR   0034H   A   
WEDNESDAY. . . . . . .  C ADDR   0038H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
